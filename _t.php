<?php

$text = "В заполярной столице продолжается работа по обновлению объектов городской инфраструктуры. Вчера глава администрации Мурманска Андрей Сысоев совместно с депутатами городского Совета проверил ход ремонта лестницы на улице Старостина, 29.
– Учитывая многоуровневый рельеф Мурманска, городские власти уделяют большое внимание вопросу содержания лестниц, – подчеркнул глава администрации областного центра Андрей Сысоев. – Ежегодно в городе ремонтируется около 20 лестниц.
Стоит отметить, что план ремонта формируется с учетом пожеланий горожан. На этом участке довольно сложный ландшафт, поэтому вопрос обустройства пешеходной связи очень важен для жителей микрорайона.
– В близлежащих домах проживают по-настоящему неравнодушные мурманчане, которые обратились с просьбой отремонтировать лестницу. Отрадно, что власти областного центра оперативно отреагировали на эту просьбу, – пояснил депутат Совета депутатов города Мурманска Олег Ноздрачев.
На месте старой, пришедшей со временем в негодность, появится совершенно новая конструкция с покрытием из дощатого настила. Кроме того, для удобства мурманчан будут установлены перильные ограждения и спуск для колясок.
– Новая лестница станет более безопасной и удобной, что немаловажно, поскольку ею часто пользуются дети, обучающиеся в расположенной неподалеку школе, – отметил депутат Совета депутатов города Мурманска Юрий Гугин.
Сейчас ведется разборка старой лестницы. Завершить основные работы планируется до конца года.";

$text2 = "На улице Старостина в районе дома № 29 появится новая лестница. Конструкция с дощатым настилом будет оснащена перилами и спуском для колясок.
Сейчас ведется разборка старой лестницы. Завершить основные работы планируется до конца года.
Читайте еще на сайте «Мурманского вестника»";

echo Shingles::analyze($text2, $text) ;


class Shingles {

    const SHINGLES_LEN = 3 ;

    public static function analyze ($source1, $source2)
    {
        $words1 = self::canonize($source1) ;
        $shingles1 = self::shinglesGen($words1) ;

        $words2 = self::canonize($source2) ;
        $shingles2 = self::shinglesGen($words2) ;

        $intersection = array_intersect($shingles1, $shingles2) ;

        $intersectionPercent = (count($intersection) / count($words1)) * 100 ;

        return $intersectionPercent ;
    }


    private static function canonize($text)
    {
        $words = explode(' ', $text) ;

        $result = array() ;
        foreach($words as $k=>$w)
        {
            $w = strtolower($w) ;
            $w = preg_replace(self::$filter, '', $w) ;

            if(!empty($w)) {
                $result[] = trim($w); ;
            }
        }

        return $result ;
    }


    private static function shinglesGen($words)
    {
        $wordsLen = count($words) ;
        $shinglesCount = $wordsLen - (self::SHINGLES_LEN - 1) ;

        $shingles = array() ;


        for($i=0; $i < $shinglesCount; $i++)
        {
            $sh = array() ;
            for($k=$i; $k < $i + self::SHINGLES_LEN; $k++)
            {
                $sh[] = $words[$k] ;
            }

            $shingles[] = crc32( implode(' ', $sh) ) ;
        }

        return $shingles ;
    }


    private static $filter = array(
        '/,/',
        '/\./',
        '/\!/',
        '/\?/',
        '/\(/',
        '/\)/',
        '/-/',
        '/—/',
        '/:/',
        '/;/',
        '/"/',
        '/«/',
        '/»/',

        '/^это$/',
        '/^как$/',
        '/^так$/',
        '/^в$/',
        '/^на$/',
        '/^над$/',
        '/^к$/',
        '/^ко$/',
        '/^до$/',
        '/^за$/',
        '/^то$/',
        '/^с$/',
        '/^со$/',
        '/^для$/',
        '/^о$/',
        '/^ну$/',
        '/^же$/',
        '/^ж$/',
        '/^что$/',
        '/^он$/',
        '/^она$/',
        '/^б$/',
        '/^бы$/',
        '/^ли$/',
        '/^и$/',
        '/^у$/'
    ) ;
}



?>